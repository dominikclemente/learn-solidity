{
  "contractName": "ERC20MinterPauserCapped",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "cap_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CAP_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCap_",
          "type": "uint256"
        }
      ],
      "name": "changeCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cap_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CAP_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap_\",\"type\":\"uint256\"}],\"name\":\"changeCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"changeCap(uint256)\":{\"details\":\"Modifies the maximum supply of the token Requirements: - the caller must have the `CAP_ROLE`.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20MinterPauserCapped.sol\":\"ERC20MinterPauserCapped\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/AccessControl.sol\":{\"keccak256\":\"0x70d0d326867661dc3b77b268f19ba94b0536f5cad360ccd52fbf32cdbce42c74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d3abd97b086e7790a676353a7936503a1926a68f798bd6687d2c872c0fd8c57\",\"dweb:/ipfs/QmRUUvc89cFZbF1Ds5ydZM3tJLUXDC1W1KMmu7XK5mUHey\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20.sol\":{\"keccak256\":\"0xa2cc005cfc8f59bff1faea5460a04d10bb63c1ef296bbab0653f79539c16c36f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afe941c6539a2f25b7fc220e1c3a394b2465a08841acca8e3b31d32e0580f13d\",\"dweb:/ipfs/QmQSw6WAbLcwsn7dFY9P9D4VUXnRm7D3Lm1MNcCseEwT5Q\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20Burnable.sol\":{\"keccak256\":\"0x23360f1f6154fa82f57435b8d92cb4d4be64d4830cf6576fc15f7c70292a9b63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://285e86d5ec62431fdd79c6ef4b7ad76f12ec0eff4852442c4eb16bad6e93d059\",\"dweb:/ipfs/QmP7H1u1UR6hZyeY8rn5icjp1XaM4PeBCzWUT8mxMFaxbK\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20MinterPauserCapped.sol\":{\"keccak256\":\"0xe014959cce19c71166bce583986b6af86a1f9c9728cb1f7ae102c930d889f5ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21448e1e253f3d74b20b04433f85d3d46cd25daba18490d16689d2cb3bd5aa9d\",\"dweb:/ipfs/Qmc9oKxdoQZkhunpF43VdJgnQzSLPgeCn2MBXXwmVip1Ae\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20Pausable.sol\":{\"keccak256\":\"0x339ce3f09ac3fc5890766cbdc5051e7ba3199d46fececcecc43d7ca4f4ddc9d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991c82b502ea946323d1502320b4fe5281108cb19f4d617b7840520cdadd3919\",\"dweb:/ipfs/QmUUXaQDQmJkCuFd6dZnMt12mFfJFynHr4kh259RbdydS9\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]},\"/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806379cc679011610104578063a217fddf116100a2578063d539139311610071578063d5391393146108fc578063d547741f1461091a578063dd62ed3e14610968578063e63ab1e9146109e0576101da565b8063a217fddf146107d4578063a457c2d7146107f2578063a9059cbb14610856578063ca15c873146108ba576101da565b80638456cb59116100de5780638456cb59146106815780639010d07c1461068b57806391d14854146106ed57806395d89b4114610751576101da565b806379cc6790146105e7578063800edb9d1461063557806382c95f9c14610663576101da565b8063355274ea1161017c57806340c10f191161014b57806340c10f19146104f357806342966c68146105415780635c975abb1461056f57806370a082311461058f576101da565b8063355274ea1461041957806336568abe1461043757806339509351146104855780633f4ba83a146104e9576101da565b806323b872dd116101b857806323b872dd146102e4578063248a9ca3146103685780632f2ff15d146103aa578063313ce567146103f8576101da565b806306fdde03146101df578063095ea7b31461026257806318160ddd146102c6575b600080fd5b6101e76109fe565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ae6004803603604081101561027857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aa0565b60405180821515815260200191505060405180910390f35b6102ce610abe565b6040518082815260200191505060405180910390f35b610350600480360360608110156102fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ac8565b60405180821515815260200191505060405180910390f35b6103946004803603602081101561037e57600080fd5b8101908080359060200190929190505050610ba1565b6040518082815260200191505060405180910390f35b6103f6600480360360408110156103c057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bc0565b005b610400610c49565b604051808260ff16815260200191505060405180910390f35b610421610c60565b6040518082815260200191505060405180910390f35b6104836004803603604081101561044d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c6a565b005b6104d16004803603604081101561049b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d03565b60405180821515815260200191505060405180910390f35b6104f1610db6565b005b61053f6004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e46565b005b61056d6004803603602081101561055757600080fd5b8101908080359060200190929190505050610eda565b005b610577610eee565b60405180821515815260200191505060405180910390f35b6105d1600480360360208110156105a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f05565b6040518082815260200191505060405180910390f35b610633600480360360408110156105fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f4e565b005b6106616004803603602081101561064b57600080fd5b8101908080359060200190929190505050610fb0565b005b61066b6110a0565b6040518082815260200191505060405180910390f35b6106896110c4565b005b6106c1600480360360408110156106a157600080fd5b810190808035906020019092919080359060200190929190505050611154565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107396004803603604081101561070357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611185565b60405180821515815260200191505060405180910390f35b6107596111b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561079957808201518184015260208101905061077e565b50505050905090810190601f1680156107c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107dc611258565b6040518082815260200191505060405180910390f35b61083e6004803603604081101561080857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061125f565b60405180821515815260200191505060405180910390f35b6108a26004803603604081101561086c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061132c565b60405180821515815260200191505060405180910390f35b6108e6600480360360208110156108d057600080fd5b810190808035906020019092919050505061134a565b6040518082815260200191505060405180910390f35b610904611370565b6040518082815260200191505060405180910390f35b6109666004803603604081101561093057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611394565b005b6109ca6004803603604081101561097e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061141d565b6040518082815260200191505060405180910390f35b6109e86114a4565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a965780601f10610a6b57610100808354040283529160200191610a96565b820191906000526020600020905b815481529060010190602001808311610a7957829003601f168201915b5050505050905090565b6000610ab4610aad6114f8565b8484611500565b6001905092915050565b6000600354905090565b6000610ad58484846116f7565b610b9684610ae16114f8565b610b918560405180606001604052806028815260200161276960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b476114f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119bc9092919063ffffffff16565b611500565b600190509392505050565b6000806000838152602001908152602001600020600201549050919050565b610be660008084815260200190815260200160002060020154610be16114f8565b611185565b610c3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612623602f913960400191505060405180910390fd5b610c458282611a76565b5050565b6000600660009054906101000a900460ff16905090565b6000600754905090565b610c726114f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806128a0602f913960400191505060405180910390fd5b610cff8282611b09565b5050565b6000610dac610d106114f8565b84610da78560026000610d216114f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9c90919063ffffffff16565b611500565b6001905092915050565b610de77f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610de26114f8565b611185565b610e3c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806126ec6039913960400191505060405180910390fd5b610e44611c24565b565b610e777f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610e726114f8565b611185565b610ecc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806128f96036913960400191505060405180910390fd5b610ed68282611d0f565b5050565b610eeb610ee56114f8565b82611ed8565b50565b6000600660019054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610f8d8260405180606001604052806024815260200161279160249139610f7e86610f796114f8565b61141d565b6119bc9092919063ffffffff16565b9050610fa183610f9b6114f8565b83611500565b610fab8383611ed8565b505050565b610fe17f2865fb6486f1182ff260a98800c07add86e3bf298ef0eac98fcd12371e94abc9610fdc6114f8565b611185565b611036576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260448152602001806127256044913960600191505060405180910390fd5b8061103f610abe565b1015611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061281f6025913960400191505060405180910390fd5b8060078190555050565b7f2865fb6486f1182ff260a98800c07add86e3bf298ef0eac98fcd12371e94abc981565b6110f57f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6110f06114f8565b611185565b61114a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806128446037913960400191505060405180910390fd5b61115261209e565b565b600061117d8260008086815260200190815260200160002060000161218a90919063ffffffff16565b905092915050565b60006111ae826000808681526020019081526020016000206000016121a490919063ffffffff16565b905092915050565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561124e5780601f106112235761010080835404028352916020019161124e565b820191906000526020600020905b81548152906001019060200180831161123157829003601f168201915b5050505050905090565b6000801b81565b600061132261126c6114f8565b8461131d8560405180606001604052806025815260200161287b60259139600260006112966114f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119bc9092919063ffffffff16565b611500565b6001905092915050565b60006113406113396114f8565b84846116f7565b6001905092915050565b60006113696000808481526020019081526020016000206000016121d4565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6113ba600080848152602001908152602001600020600201546113b56114f8565b611185565b61140f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806126bc6030913960400191505060405180910390fd5b6114198282611b09565b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006114f0836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6121e9565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611586576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806127fb6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561160c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806126746022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561177d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806127d66025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126006023913960400191505060405180910390fd5b61180e838383612259565b61187a8160405180606001604052806026815260200161269660269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119bc9092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061190f81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611a69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a2e578082015181840152602081019050611a13565b50505050905090810190601f168015611a5b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b611a9d816000808581526020019081526020016000206000016114c890919063ffffffff16565b15611b0557611aaa6114f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b611b308160008085815260200190815260200160002060000161231890919063ffffffff16565b15611b9857611b3d6114f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015611c1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611c2c610eee565b611c9e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600660016101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611ce26114f8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611db2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611dbe60008383612259565b611dd381600354611b9c90919063ffffffff16565b600381905550611e2b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9c90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f5e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806127b56021913960400191505060405180910390fd5b611f6a82600083612259565b611fd68160405180606001604052806022815260200161265260229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119bc9092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061202e8160035461234890919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6120a6610eee565b15612119576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600660016101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861215d6114f8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061219983600001836123cb565b60001c905092915050565b60006121cc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61244e565b905092915050565b60006121e282600001612471565b9050919050565b60006121f5838361244e565b61224e578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612253565b600090505b92915050565b612264838383612482565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612313576122a1610c60565b6122bb826122ad610abe565b611b9c90919063ffffffff16565b1115612312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061281f6025913960400191505060405180910390fd5b5b505050565b6000612340836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6124f0565b905092915050565b6000828211156123c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b60008183600001805490501161242c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806125de6022913960400191505060405180910390fd5b82600001828154811061243b57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b61248d8383836125d8565b612495610eee565b156124eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806128cf602a913960400191505060405180910390fd5b505050565b600080836001016000848152602001908152602001600020549050600081146125cc576000600182039050600060018660000180549050039050600086600001828154811061253b57fe5b906000526020600020015490508087600001848154811061255857fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061259057fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506125d2565b60009150505b92915050565b50505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332304d696e7465725061757365724361707065643a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332304d696e7465725061757365724361707065643a206d75737420686176652063617020726f6c6520746f206d6f64696679206d6178696d756d20737570706c7945524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332304d696e7465725061757365724361707065643a2063617020657863656564656445524332304d696e7465725061757365724361707065643a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c652070617573656445524332304d696e7465725061757365724361707065643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74a26469706673582212206ff66d234a083d1215b836414212f7f3779c15c050d921b608f3202f4b442bf464736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "795:3018:5:-:0;;;1329:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:4;1416:6;2021:5:3;2013;:13;;;;;;;;;;;;:::i;:::-;;2046:7;2036;:17;;;;;;;;;;;;:::i;:::-;;2075:2;2063:9;;:14;;;;;;;;;;;;;;;;;;1939:145;;945:5:9;935:7;;:15;;;;;;;;;;;;;;;;;;1449:1:5::1;1442:4;:8;1434:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:44;1751:4:0;1510:18:5::0;::::1;1530:12;:10;;;:12;;:::i;:::-;1499:10;;;:44;;:::i;:::-;1553:37;991:24;1577:12;:10;;;:12;;:::i;:::-;1553:10;;;:37;;:::i;:::-;1600;1059:24;1624:12;:10;;;:12;;:::i;:::-;1600:10;;;:37;;:::i;:::-;1647:34;1124:21;1668:12;:10;;;:12;;:::i;:::-;1647:10;;;:34;;:::i;:::-;1699:4;1692;:11;;;;1329:381:::0;;;795:3018;;598:104:2;651:15;685:10;678:17;;598:104;:::o;6567:110:0:-;6645:25;6656:4;6662:7;6645:10;;;:25;;:::i;:::-;6567:110;;:::o;7004:184::-;7077:33;7102:7;7077:6;:12;7084:4;7077:12;;;;;;;;;;;:20;;:24;;;;;;:33;;;;:::i;:::-;7073:109;;;7158:12;:10;;;:12;;:::i;:::-;7131:40;;7149:7;7131:40;;7143:4;7131:40;;;;;;;;;;7073:109;7004:184;;:::o;6429:150:7:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;;;:50;;:::i;:::-;6515:57;;6429:150;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;;;:21;;:::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;795:3018:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "795:3018:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2149:89:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4225:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3216:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4858:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4261:112:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4623:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3067:89:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3377:81:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5797:205:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5570:215:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2680:175:5;;;:::i;:::-;;1899:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;514:89:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1052:84:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3380:125:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;909:290:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3012:359:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1089:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2304:169;;;:::i;:::-;;3944:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2929:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2351:93:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1706:49:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6272:266:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3708:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3234:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;953:62:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5080:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3938:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1021:62:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2149:89:3;2194:13;2226:5;2219:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2149:89;:::o;4225:166::-;4308:4;4324:39;4333:12;:10;:12::i;:::-;4347:7;4356:6;4324:8;:39::i;:::-;4380:4;4373:11;;4225:166;;;;:::o;3216:106::-;3277:7;3303:12;;3296:19;;3216:106;:::o;4858:317::-;4964:4;4980:36;4990:6;4998:9;5009:6;4980:9;:36::i;:::-;5026:121;5035:6;5043:12;:10;:12::i;:::-;5057:89;5095:6;5057:89;;;;;;;;;;;;;;;;;:11;:19;5069:6;5057:19;;;;;;;;;;;;;;;:33;5077:12;:10;:12::i;:::-;5057:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5026:8;:121::i;:::-;5164:4;5157:11;;4858:317;;;;;:::o;4261:112:0:-;4318:7;4344:6;:12;4351:4;4344:12;;;;;;;;;;;:22;;;4337:29;;4261:112;;;:::o;4623:223::-;4706:45;4714:6;:12;4721:4;4714:12;;;;;;;;;;;:22;;;4738:12;:10;:12::i;:::-;4706:7;:45::i;:::-;4698:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4814:25;4825:4;4831:7;4814:10;:25::i;:::-;4623:223;;:::o;3067:89:3:-;3116:5;3140:9;;;;;;;;;;;3133:16;;3067:89;:::o;3377:81:5:-;3421:7;3447:4;;3440:11;;3377:81;:::o;5797:205:0:-;5894:12;:10;:12::i;:::-;5883:23;;:7;:23;;;5875:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5969:26;5981:4;5987:7;5969:11;:26::i;:::-;5797:205;;:::o;5570:215:3:-;5658:4;5674:83;5683:12;:10;:12::i;:::-;5697:7;5706:50;5745:10;5706:11;:25;5718:12;:10;:12::i;:::-;5706:25;;;;;;;;;;;;;;;:34;5732:7;5706:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5674:8;:83::i;:::-;5774:4;5767:11;;5570:215;;;;:::o;2680:175:5:-;2732:34;1059:24;2753:12;:10;:12::i;:::-;2732:7;:34::i;:::-;2724:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2838:10;:8;:10::i;:::-;2680:175::o;1899:202::-;1974:34;991:24;1995:12;:10;:12::i;:::-;1974:7;:34::i;:::-;1966:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:17;2083:2;2087:6;2077:5;:17::i;:::-;1899:202;;:::o;514:89:4:-;569:27;575:12;:10;:12::i;:::-;589:6;569:5;:27::i;:::-;514:89;:::o;1052:84:9:-;1099:4;1122:7;;;;;;;;;;;1115:14;;1052:84;:::o;3380:125:3:-;3454:7;3480:9;:18;3490:7;3480:18;;;;;;;;;;;;;;;;3473:25;;3380:125;;;:::o;909:290:4:-;985:26;1014:84;1051:6;1014:84;;;;;;;;;;;;;;;;;:32;1024:7;1033:12;:10;:12::i;:::-;1014:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;985:113;;1109:51;1118:7;1127:12;:10;:12::i;:::-;1141:18;1109:8;:51::i;:::-;1170:22;1176:7;1185:6;1170:5;:22::i;:::-;909:290;;;:::o;3012:359:5:-;3081:31;1124:21;3099:12;:10;:12::i;:::-;3081:7;:31::i;:::-;3073:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3291:7;3274:13;:11;:13::i;:::-;:24;;3266:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3357:7;3350:4;:14;;;;3012:359;:::o;1089:56::-;1124:21;1089:56;:::o;2304:169::-;2354:34;1059:24;2375:12;:10;:12::i;:::-;2354:7;:34::i;:::-;2346:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:8;:6;:8::i;:::-;2304:169::o;3944:136:0:-;4017:7;4043:30;4067:5;4043:6;:12;4050:4;4043:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;4036:37;;3944:136;;;;:::o;2929:137::-;2998:4;3021:38;3051:7;3021:6;:12;3028:4;3021:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;3014:45;;2929:137;;;;:::o;2351:93:3:-;2398:13;2430:7;2423:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2351:93;:::o;1706:49:0:-;1751:4;1706:49;;;:::o;6272:266:3:-;6365:4;6381:129;6390:12;:10;:12::i;:::-;6404:7;6413:96;6452:15;6413:96;;;;;;;;;;;;;;;;;:11;:25;6425:12;:10;:12::i;:::-;6413:25;;;;;;;;;;;;;;;:34;6439:7;6413:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6381:8;:129::i;:::-;6527:4;6520:11;;6272:266;;;;:::o;3708:172::-;3794:4;3810:42;3820:12;:10;:12::i;:::-;3834:9;3845:6;3810:9;:42::i;:::-;3869:4;3862:11;;3708:172;;;;:::o;3234:125:0:-;3297:7;3323:29;:6;:12;3330:4;3323:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3316:36;;3234:125;;;:::o;953:62:5:-;991:24;953:62;:::o;5080:226:0:-;5164:45;5172:6;:12;5179:4;5172:12;;;;;;;;;;;:22;;;5196:12;:10;:12::i;:::-;5164:7;:45::i;:::-;5156:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5273:26;5285:4;5291:7;5273:11;:26::i;:::-;5080:226;;:::o;3938:149:3:-;4027:7;4053:11;:18;4065:5;4053:18;;;;;;;;;;;;;;;:27;4072:7;4053:27;;;;;;;;;;;;;;;;4046:34;;3938:149;;;;:::o;1021:62:5:-;1059:24;1021:62;:::o;6429:150:7:-;6499:4;6522:50;6527:3;:10;;6563:5;6547:23;;6539:32;;6522:4;:50::i;:::-;6515:57;;6429:150;;;;:::o;598:104:2:-;651:15;685:10;678:17;;598:104;:::o;9336:340:3:-;9454:1;9437:19;;:5;:19;;;;9429:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9534:1;9515:21;;:7;:21;;;;9507:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9616:6;9586:11;:18;9598:5;9586:18;;;;;;;;;;;;;;;:27;9605:7;9586:27;;;;;;;;;;;;;;;:36;;;;9653:7;9637:32;;9646:5;9637:32;;;9662:6;9637:32;;;;;;;;;;;;;;;;;;9336:340;;;:::o;7012:530::-;7135:1;7117:20;;:6;:20;;;;7109:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7218:1;7197:23;;:9;:23;;;;7189:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7271:47;7292:6;7300:9;7311:6;7271:20;:47::i;:::-;7349:71;7371:6;7349:71;;;;;;;;;;;;;;;;;:9;:17;7359:6;7349:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7329:9;:17;7339:6;7329:17;;;;;;;;;;;;;;;:91;;;;7453:32;7478:6;7453:9;:20;7463:9;7453:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7430:9;:20;7440:9;7430:20;;;;;;;;;;;;;;;:55;;;;7517:9;7500:35;;7509:6;7500:35;;;7528:6;7500:35;;;;;;;;;;;;;;;;;;7012:530;;;:::o;5432:163:10:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;7004:184:0:-;7077:33;7102:7;7077:6;:12;7084:4;7077:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;7073:109;;;7158:12;:10;:12::i;:::-;7131:40;;7149:7;7131:40;;7143:4;7131:40;;;;;;;;;;7073:109;7004:184;;:::o;7194:188::-;7268:36;7296:7;7268:6;:12;7275:4;7268:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;7264:112;;;7352:12;:10;:12::i;:::-;7325:40;;7343:7;7325:40;;7337:4;7325:40;;;;;;;;;;7264:112;7194:188;;:::o;2690:175:10:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;2064:117:9:-;1631:8;:6;:8::i;:::-;1623:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2132:5:::1;2122:7;;:15;;;;;;;;;;;;;;;;;;2152:22;2161:12;:10;:12::i;:::-;2152:22;;;;;;;;;;;;;;;;;;;;2064:117::o:0;7813:370:3:-;7915:1;7896:21;;:7;:21;;;;7888:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7964:49;7993:1;7997:7;8006:6;7964:20;:49::i;:::-;8039:24;8056:6;8039:12;;:16;;:24;;;;:::i;:::-;8024:12;:39;;;;8094:30;8117:6;8094:9;:18;8104:7;8094:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8073:9;:18;8083:7;8073:18;;;;;;;;;;;;;;;:51;;;;8160:7;8139:37;;8156:1;8139:37;;;8169:6;8139:37;;;;;;;;;;;;;;;;;;7813:370;;:::o;8503:410::-;8605:1;8586:21;;:7;:21;;;;8578:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8656:49;8677:7;8694:1;8698:6;8656:20;:49::i;:::-;8737:68;8760:6;8737:68;;;;;;;;;;;;;;;;;:9;:18;8747:7;8737:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8716:9;:18;8726:7;8716:18;;;;;;;;;;;;;;;:89;;;;8830:24;8847:6;8830:12;;:16;;:24;;;;:::i;:::-;8815:12;:39;;;;8895:1;8869:37;;8878:7;8869:37;;;8899:6;8869:37;;;;;;;;;;;;;;;;;;8503:410;;:::o;1817:115:9:-;1366:8;:6;:8::i;:::-;1365:9;1357:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1886:4:::1;1876:7;;:14;;;;;;;;;;;;;;;;;;1905:20;1912:12;:10;:12::i;:::-;1905:20;;;;;;;;;;;;;;;;;;;;1817:115::o:0;7677:156:7:-;7751:7;7801:22;7805:3;:10;;7817:5;7801:3;:22::i;:::-;7793:31;;7770:56;;7677:156;;;;:::o;6984:165::-;7064:4;7087:55;7097:3;:10;;7133:5;7117:23;;7109:32;;7087:9;:55::i;:::-;7080:62;;6984:165;;;;:::o;7230:115::-;7293:7;7319:19;7327:3;:10;;7319:7;:19::i;:::-;7312:26;;7230:115;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;3464:347:5:-;3594:44;3621:4;3627:2;3631:6;3594:26;:44::i;:::-;3669:1;3653:18;;:4;:18;;;3649:156;;;3747:5;:3;:5::i;:::-;3718:25;3736:6;3718:13;:11;:13::i;:::-;:17;;:25;;;;:::i;:::-;:34;;3710:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3649:156;3464:347;;;:::o;6747:156:7:-;6820:4;6843:53;6851:3;:10;;6887:5;6871:23;;6863:32;;6843:7;:53::i;:::-;6836:60;;6747:156;;;;:::o;3136:155:10:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;4452:201:7:-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4013:107::-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;580:234:6:-;688:44;715:4;721:2;725:6;688:26;:44::i;:::-;752:8;:6;:8::i;:::-;751:9;743:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;580:234;;;:::o;2212:1512:7:-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;10682:92:3:-;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./AccessControl.sol\";\nimport \"./Context.sol\";\nimport \"./ERC20.sol\";\nimport \"./ERC20Burnable.sol\";\nimport \"./SafeMath.sol\";\nimport \"./ERC20Pausable.sol\";\n\n/**\n * @dev {ERC20} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\ncontract ERC20MinterPauserCapped is Context, AccessControl, ERC20Burnable, ERC20Pausable {\n    \n    using SafeMath for uint256;\n    uint256 private _cap;\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant CAP_ROLE = keccak256(\"CAP_ROLE\");\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * See {ERC20-constructor}.\n     */\n    constructor(string memory name, string memory symbol, uint256 cap_) public ERC20(name, symbol) {\n        require(cap_ > 0, \"ERC20MinterPauserCapped: Cap is 0\");\n\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n        _setupRole(CAP_ROLE, _msgSender());\n\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`.\n     *\n     * See {ERC20-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 amount) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20MinterPauserCapped: must have minter role to mint\");\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20MinterPauserCapped: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC20Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC20MinterPauserCapped: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    /**\n     * @dev Modifies the maximum supply of the token\n     *\n     * Requirements:\n     *\n     * - the caller must have the `CAP_ROLE`.\n     */\n\n    function changeCap(uint256 newCap_) public virtual {\n        require(hasRole(CAP_ROLE, _msgSender()), \"ERC20MinterPauserCapped: must have cap role to modify maximum supply\");\n        // Make sure that the total supply will not exceed the new cap\n        require(totalSupply() >= newCap_, \"ERC20MinterPauserCapped: cap exceeded\");\n        _cap = newCap_;\n    }\n\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override(ERC20, ERC20Pausable) {\n        super._beforeTokenTransfer(from, to, amount);\n\n        if (from == address(0)) { // When minting tokens\n            require(totalSupply().add(amount) <= cap(), \"ERC20MinterPauserCapped: cap exceeded\");\n        }\n    }\n}\n",
  "sourcePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20MinterPauserCapped.sol",
  "ast": {
    "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20MinterPauserCapped.sol",
    "exportedSymbols": {
      "AccessControl": [
        282
      ],
      "Address": [
        578
      ],
      "Context": [
        601
      ],
      "ERC20": [
        1104
      ],
      "ERC20Burnable": [
        1163
      ],
      "ERC20MinterPauserCapped": [
        1385
      ],
      "ERC20Pausable": [
        1422
      ],
      "EnumerableSet": [
        1914
      ],
      "IERC20": [
        1992
      ],
      "Pausable": [
        2084
      ],
      "SafeMath": [
        2439
      ]
    },
    "id": 1386,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1165,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:5"
      },
      {
        "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/AccessControl.sol",
        "file": "./AccessControl.sol",
        "id": 1166,
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 283,
        "src": "66:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/Context.sol",
        "file": "./Context.sol",
        "id": 1167,
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 602,
        "src": "96:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1168,
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 1105,
        "src": "120:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20Burnable.sol",
        "file": "./ERC20Burnable.sol",
        "id": 1169,
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 1164,
        "src": "142:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 1170,
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 2440,
        "src": "172:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20Pausable.sol",
        "file": "./ERC20Pausable.sol",
        "id": 1171,
        "nodeType": "ImportDirective",
        "scope": 1386,
        "sourceUnit": 1423,
        "src": "197:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1173,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 601,
              "src": "831:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$601",
                "typeString": "contract Context"
              }
            },
            "id": 1174,
            "nodeType": "InheritanceSpecifier",
            "src": "831:7:5"
          },
          {
            "baseName": {
              "id": 1175,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "840:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$282",
                "typeString": "contract AccessControl"
              }
            },
            "id": 1176,
            "nodeType": "InheritanceSpecifier",
            "src": "840:13:5"
          },
          {
            "baseName": {
              "id": 1177,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1163,
              "src": "855:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$1163",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 1178,
            "nodeType": "InheritanceSpecifier",
            "src": "855:13:5"
          },
          {
            "baseName": {
              "id": 1179,
              "name": "ERC20Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1422,
              "src": "870:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Pausable_$1422",
                "typeString": "contract ERC20Pausable"
              }
            },
            "id": 1180,
            "nodeType": "InheritanceSpecifier",
            "src": "870:13:5"
          }
        ],
        "contractDependencies": [
          282,
          601,
          1104,
          1163,
          1422,
          1992,
          2084
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1172,
          "nodeType": "StructuredDocumentation",
          "src": "228:566:5",
          "text": " @dev {ERC20} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 1385,
        "linearizedBaseContracts": [
          1385,
          1422,
          2084,
          1163,
          1104,
          1992,
          282,
          601
        ],
        "name": "ERC20MinterPauserCapped",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1183,
            "libraryName": {
              "id": 1181,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2439,
              "src": "901:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2439",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "895:27:5",
            "typeName": {
              "id": 1182,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "914:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1185,
            "mutability": "mutable",
            "name": "_cap",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "927:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1184,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "927:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 1190,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "953:62:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1186,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "953:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 1188,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1001:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 1187,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "991:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1189,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "991:24:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 1195,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "1021:62:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1191,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1021:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 1193,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1069:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 1192,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1059:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1194,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1059:24:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "82c95f9c",
            "id": 1200,
            "mutability": "constant",
            "name": "CAP_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 1385,
            "src": "1089:56:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1196,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1089:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4341505f524f4c45",
                  "id": 1198,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1134:10:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_2865fb6486f1182ff260a98800c07add86e3bf298ef0eac98fcd12371e94abc9",
                    "typeString": "literal_string \"CAP_ROLE\""
                  },
                  "value": "CAP_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_2865fb6486f1182ff260a98800c07add86e3bf298ef0eac98fcd12371e94abc9",
                    "typeString": "literal_string \"CAP_ROLE\""
                  }
                ],
                "id": 1197,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1124:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1199,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1124:21:5",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1249,
              "nodeType": "Block",
              "src": "1424:286:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1215,
                          "name": "cap_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1207,
                          "src": "1442:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1449:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1442:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332304d696e7465725061757365724361707065643a204361702069732030",
                        "id": 1218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1452:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e23ce9d8a2c4837c715e03678fc59b681e98d2b057b52136c3f85e02965dbcfc",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: Cap is 0\""
                        },
                        "value": "ERC20MinterPauserCapped: Cap is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e23ce9d8a2c4837c715e03678fc59b681e98d2b057b52136c3f85e02965dbcfc",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: Cap is 0\""
                        }
                      ],
                      "id": 1214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1434:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1434:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1220,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:54:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1222,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1510:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1223,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 589,
                          "src": "1530:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1530:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1221,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "1499:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1499:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1226,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:44:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1228,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1190,
                        "src": "1564:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1229,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 589,
                          "src": "1577:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1577:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1227,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "1553:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1553:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1232,
                  "nodeType": "ExpressionStatement",
                  "src": "1553:37:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1234,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1195,
                        "src": "1611:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1235,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 589,
                          "src": "1624:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1624:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1233,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "1600:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1238,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:37:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1240,
                        "name": "CAP_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "1658:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1241,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 589,
                          "src": "1668:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1668:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1239,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "1647:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1244,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:34:5"
                },
                {
                  "expression": {
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1245,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "1692:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1246,
                      "name": "cap_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "1699:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1692:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1248,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:11:5"
                }
              ]
            },
            "documentation": {
              "id": 1201,
              "nodeType": "StructuredDocumentation",
              "src": "1152:172:5",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."
            },
            "id": 1250,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1210,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1203,
                    "src": "1410:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1211,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1205,
                    "src": "1416:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1212,
                "modifierName": {
                  "id": 1209,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1104,
                  "src": "1404:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1104_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1404:19:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "1341:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1205,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "1361:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1204,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "cap_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "1383:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1340:56:5"
            },
            "returnParameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:5"
            },
            "scope": 1385,
            "src": "1329:381:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1272,
              "nodeType": "Block",
              "src": "1956:145:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1260,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "1982:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1261,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "1995:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1995:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1259,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1974:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1974:34:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332304d696e7465725061757365724361707065643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2010:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdd84d2c8d84034bb45d3eee143165d2e6ef4a4800be3cc40ae24fe7fa121ad3",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: must have minter role to mint\""
                        },
                        "value": "ERC20MinterPauserCapped: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdd84d2c8d84034bb45d3eee143165d2e6ef4a4800be3cc40ae24fe7fa121ad3",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: must have minter role to mint\""
                        }
                      ],
                      "id": 1258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1966:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1966:101:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1266,
                  "nodeType": "ExpressionStatement",
                  "src": "1966:101:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1268,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "2083:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1269,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "2087:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1267,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 980,
                      "src": "2077:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "2077:17:5"
                }
              ]
            },
            "documentation": {
              "id": 1251,
              "nodeType": "StructuredDocumentation",
              "src": "1716:178:5",
              "text": " @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "40c10f19",
            "id": 1273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1273,
                  "src": "1913:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1273,
                  "src": "1925:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1925:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:28:5"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1956:0:5"
            },
            "scope": 1385,
            "src": "1899:202:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1289,
              "nodeType": "Block",
              "src": "2336:137:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1279,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "2362:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1280,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "2375:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2375:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1278,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "2354:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2354:34:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332304d696e7465725061757365724361707065643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7dbcdbcb5776e213a5baf66f132b4752f810e014aaf34fe32c391723a143b67",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: must have pauser role to pause\""
                        },
                        "value": "ERC20MinterPauserCapped: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7dbcdbcb5776e213a5baf66f132b4752f810e014aaf34fe32c391723a143b67",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: must have pauser role to pause\""
                        }
                      ],
                      "id": 1277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2346:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2346:102:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1285,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:102:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1286,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2067,
                      "src": "2458:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2458:8:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1288,
                  "nodeType": "ExpressionStatement",
                  "src": "2458:8:5"
                }
              ]
            },
            "documentation": {
              "id": 1274,
              "nodeType": "StructuredDocumentation",
              "src": "2107:192:5",
              "text": " @dev Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 1290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2318:2:5"
            },
            "returnParameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:0:5"
            },
            "scope": 1385,
            "src": "2304:169:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1306,
              "nodeType": "Block",
              "src": "2714:141:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1296,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "2740:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1297,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "2753:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2753:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1295,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "2732:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2732:34:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332304d696e7465725061757365724361707065643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2768:59:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88a361b892de9d13c3c921108ecf513ebedcc87377cefe22ea8ad6f518865385",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: must have pauser role to unpause\""
                        },
                        "value": "ERC20MinterPauserCapped: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88a361b892de9d13c3c921108ecf513ebedcc87377cefe22ea8ad6f518865385",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: must have pauser role to unpause\""
                        }
                      ],
                      "id": 1294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2724:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:104:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1302,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:104:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1303,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2083,
                      "src": "2838:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2838:10:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1305,
                  "nodeType": "ExpressionStatement",
                  "src": "2838:10:5"
                }
              ]
            },
            "documentation": {
              "id": 1291,
              "nodeType": "StructuredDocumentation",
              "src": "2479:196:5",
              "text": " @dev Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 1307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2696:2:5"
            },
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2714:0:5"
            },
            "scope": 1385,
            "src": "2680:175:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1334,
              "nodeType": "Block",
              "src": "3063:308:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1315,
                            "name": "CAP_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1200,
                            "src": "3089:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1316,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "3099:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3099:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1314,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "3081:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3081:31:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332304d696e7465725061757365724361707065643a206d75737420686176652063617020726f6c6520746f206d6f64696679206d6178696d756d20737570706c79",
                        "id": 1319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3114:70:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94f48719ac2fb4543ea8ace1bdafd3e4001f97345dc9e96ac64b5432666efaaa",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: must have cap role to modify maximum supply\""
                        },
                        "value": "ERC20MinterPauserCapped: must have cap role to modify maximum supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94f48719ac2fb4543ea8ace1bdafd3e4001f97345dc9e96ac64b5432666efaaa",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: must have cap role to modify maximum supply\""
                        }
                      ],
                      "id": 1313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3073:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3073:112:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1321,
                  "nodeType": "ExpressionStatement",
                  "src": "3073:112:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1323,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "3274:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3274:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1325,
                          "name": "newCap_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1310,
                          "src": "3291:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3274:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332304d696e7465725061757365724361707065643a20636170206578636565646564",
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3300:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf3fb3cc50b010e4db782c69e22d228618be9c189ccd4ef5333e890ef6cadcaa",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: cap exceeded\""
                        },
                        "value": "ERC20MinterPauserCapped: cap exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf3fb3cc50b010e4db782c69e22d228618be9c189ccd4ef5333e890ef6cadcaa",
                          "typeString": "literal_string \"ERC20MinterPauserCapped: cap exceeded\""
                        }
                      ],
                      "id": 1322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3266:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3266:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "3266:74:5"
                },
                {
                  "expression": {
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1330,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "3350:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1331,
                      "name": "newCap_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1310,
                      "src": "3357:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3350:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "3350:14:5"
                }
              ]
            },
            "documentation": {
              "id": 1308,
              "nodeType": "StructuredDocumentation",
              "src": "2861:145:5",
              "text": " @dev Modifies the maximum supply of the token\n Requirements:\n - the caller must have the `CAP_ROLE`."
            },
            "functionSelector": "800edb9d",
            "id": 1335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeCap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "newCap_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "3031:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3031:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3030:17:5"
            },
            "returnParameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3063:0:5"
            },
            "scope": 1385,
            "src": "3012:359:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1342,
              "nodeType": "Block",
              "src": "3430:28:5",
              "statements": [
                {
                  "expression": {
                    "id": 1340,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1185,
                    "src": "3447:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1339,
                  "id": 1341,
                  "nodeType": "Return",
                  "src": "3440:11:5"
                }
              ]
            },
            "functionSelector": "355274ea",
            "id": 1343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3389:2:5"
            },
            "returnParameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "3421:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3421:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3420:9:5"
            },
            "scope": 1385,
            "src": "3377:81:5",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1103,
              1421
            ],
            "body": {
              "id": 1383,
              "nodeType": "Block",
              "src": "3584:227:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1358,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1345,
                        "src": "3621:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1359,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1347,
                        "src": "3627:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1360,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1349,
                        "src": "3631:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1355,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3594:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20MinterPauserCapped_$1385",
                          "typeString": "contract super ERC20MinterPauserCapped"
                        }
                      },
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1421,
                      "src": "3594:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3594:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "ExpressionStatement",
                  "src": "3594:44:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1363,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1345,
                      "src": "3653:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3669:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3661:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1364,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3661:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3661:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3653:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1382,
                  "nodeType": "IfStatement",
                  "src": "3649:156:5",
                  "trueBody": {
                    "id": 1381,
                    "nodeType": "Block",
                    "src": "3673:132:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1373,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1349,
                                    "src": "3736:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1370,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 690,
                                      "src": "3718:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 1371,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3718:13:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1372,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2266,
                                  "src": "3718:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3718:25:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1375,
                                  "name": "cap",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1343,
                                  "src": "3747:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 1376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3747:5:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3718:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332304d696e7465725061757365724361707065643a20636170206578636565646564",
                              "id": 1378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3754:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cf3fb3cc50b010e4db782c69e22d228618be9c189ccd4ef5333e890ef6cadcaa",
                                "typeString": "literal_string \"ERC20MinterPauserCapped: cap exceeded\""
                              },
                              "value": "ERC20MinterPauserCapped: cap exceeded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cf3fb3cc50b010e4db782c69e22d228618be9c189ccd4ef5333e890ef6cadcaa",
                                "typeString": "literal_string \"ERC20MinterPauserCapped: cap exceeded\""
                              }
                            ],
                            "id": 1369,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3710:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3710:84:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1380,
                        "nodeType": "ExpressionStatement",
                        "src": "3710:84:5"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1353,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1351,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1104,
                  "src": "3562:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1104",
                    "typeString": "contract ERC20"
                  }
                },
                {
                  "id": 1352,
                  "name": "ERC20Pausable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1422,
                  "src": "3569:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Pausable_$1422",
                    "typeString": "contract ERC20Pausable"
                  }
                }
              ],
              "src": "3553:30:5"
            },
            "parameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1345,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1384,
                  "src": "3494:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1384,
                  "src": "3508:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1349,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1384,
                  "src": "3520:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3520:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3493:42:5"
            },
            "returnParameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3584:0:5"
            },
            "scope": 1385,
            "src": "3464:347:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1386,
        "src": "795:3018:5"
      }
    ],
    "src": "33:3781:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20MinterPauserCapped.sol",
      "exportedSymbols": {
        "AccessControl": [
          282
        ],
        "Address": [
          578
        ],
        "Context": [
          601
        ],
        "ERC20": [
          1104
        ],
        "ERC20Burnable": [
          1163
        ],
        "ERC20MinterPauserCapped": [
          1385
        ],
        "ERC20Pausable": [
          1422
        ],
        "EnumerableSet": [
          1914
        ],
        "IERC20": [
          1992
        ],
        "Pausable": [
          2084
        ],
        "SafeMath": [
          2439
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1165,
        "name": "PragmaDirective",
        "src": "33:31:5"
      },
      {
        "attributes": {
          "SourceUnit": 283,
          "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/AccessControl.sol",
          "file": "./AccessControl.sol",
          "scope": 1386,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1166,
        "name": "ImportDirective",
        "src": "66:29:5"
      },
      {
        "attributes": {
          "SourceUnit": 602,
          "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/Context.sol",
          "file": "./Context.sol",
          "scope": 1386,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1167,
        "name": "ImportDirective",
        "src": "96:23:5"
      },
      {
        "attributes": {
          "SourceUnit": 1105,
          "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20.sol",
          "file": "./ERC20.sol",
          "scope": 1386,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1168,
        "name": "ImportDirective",
        "src": "120:21:5"
      },
      {
        "attributes": {
          "SourceUnit": 1164,
          "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20Burnable.sol",
          "file": "./ERC20Burnable.sol",
          "scope": 1386,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1169,
        "name": "ImportDirective",
        "src": "142:29:5"
      },
      {
        "attributes": {
          "SourceUnit": 2440,
          "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/SafeMath.sol",
          "file": "./SafeMath.sol",
          "scope": 1386,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1170,
        "name": "ImportDirective",
        "src": "172:24:5"
      },
      {
        "attributes": {
          "SourceUnit": 1423,
          "absolutePath": "/Users/autodidacticai/Code/learn/solidity/smart-contract-201-iot/token/contracts/ERC20Pausable.sol",
          "file": "./ERC20Pausable.sol",
          "scope": 1386,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1171,
        "name": "ImportDirective",
        "src": "197:29:5"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            282,
            601,
            1104,
            1163,
            1422,
            1992,
            2084
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1385,
            1422,
            2084,
            1163,
            1104,
            1992,
            282,
            601
          ],
          "name": "ERC20MinterPauserCapped",
          "scope": 1386
        },
        "children": [
          {
            "attributes": {
              "text": " @dev {ERC20} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
            },
            "id": 1172,
            "name": "StructuredDocumentation",
            "src": "228:566:5"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Context",
                  "referencedDeclaration": 601,
                  "type": "contract Context"
                },
                "id": 1173,
                "name": "UserDefinedTypeName",
                "src": "831:7:5"
              }
            ],
            "id": 1174,
            "name": "InheritanceSpecifier",
            "src": "831:7:5"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "AccessControl",
                  "referencedDeclaration": 282,
                  "type": "contract AccessControl"
                },
                "id": 1175,
                "name": "UserDefinedTypeName",
                "src": "840:13:5"
              }
            ],
            "id": 1176,
            "name": "InheritanceSpecifier",
            "src": "840:13:5"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20Burnable",
                  "referencedDeclaration": 1163,
                  "type": "contract ERC20Burnable"
                },
                "id": 1177,
                "name": "UserDefinedTypeName",
                "src": "855:13:5"
              }
            ],
            "id": 1178,
            "name": "InheritanceSpecifier",
            "src": "855:13:5"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20Pausable",
                  "referencedDeclaration": 1422,
                  "type": "contract ERC20Pausable"
                },
                "id": 1179,
                "name": "UserDefinedTypeName",
                "src": "870:13:5"
              }
            ],
            "id": 1180,
            "name": "InheritanceSpecifier",
            "src": "870:13:5"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 2439,
                  "type": "library SafeMath"
                },
                "id": 1181,
                "name": "UserDefinedTypeName",
                "src": "901:8:5"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1182,
                "name": "ElementaryTypeName",
                "src": "914:7:5"
              }
            ],
            "id": 1183,
            "name": "UsingForDirective",
            "src": "895:27:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_cap",
              "scope": 1385,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1184,
                "name": "ElementaryTypeName",
                "src": "927:7:5"
              }
            ],
            "id": 1185,
            "name": "VariableDeclaration",
            "src": "927:20:5"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "d5391393",
              "mutability": "constant",
              "name": "MINTER_ROLE",
              "scope": 1385,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 1186,
                "name": "ElementaryTypeName",
                "src": "953:7:5"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 4294967288,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 1187,
                    "name": "Identifier",
                    "src": "991:9:5"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d494e5445525f524f4c45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MINTER_ROLE\"",
                      "value": "MINTER_ROLE"
                    },
                    "id": 1188,
                    "name": "Literal",
                    "src": "1001:13:5"
                  }
                ],
                "id": 1189,
                "name": "FunctionCall",
                "src": "991:24:5"
              }
            ],
            "id": 1190,
            "name": "VariableDeclaration",
            "src": "953:62:5"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "e63ab1e9",
              "mutability": "constant",
              "name": "PAUSER_ROLE",
              "scope": 1385,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 1191,
                "name": "ElementaryTypeName",
                "src": "1021:7:5"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 4294967288,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 1192,
                    "name": "Identifier",
                    "src": "1059:9:5"
                  },
                  {
                    "attributes": {
                      "hexvalue": "5041555345525f524f4c45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"PAUSER_ROLE\"",
                      "value": "PAUSER_ROLE"
                    },
                    "id": 1193,
                    "name": "Literal",
                    "src": "1069:13:5"
                  }
                ],
                "id": 1194,
                "name": "FunctionCall",
                "src": "1059:24:5"
              }
            ],
            "id": 1195,
            "name": "VariableDeclaration",
            "src": "1021:62:5"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "82c95f9c",
              "mutability": "constant",
              "name": "CAP_ROLE",
              "scope": 1385,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 1196,
                "name": "ElementaryTypeName",
                "src": "1089:7:5"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2865fb6486f1182ff260a98800c07add86e3bf298ef0eac98fcd12371e94abc9",
                          "typeString": "literal_string \"CAP_ROLE\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 4294967288,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 1197,
                    "name": "Identifier",
                    "src": "1124:9:5"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4341505f524f4c45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"CAP_ROLE\"",
                      "value": "CAP_ROLE"
                    },
                    "id": 1198,
                    "name": "Literal",
                    "src": "1134:10:5"
                  }
                ],
                "id": 1199,
                "name": "FunctionCall",
                "src": "1124:21:5"
              }
            ],
            "id": 1200,
            "name": "VariableDeclaration",
            "src": "1089:56:5"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1385,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n See {ERC20-constructor}."
                },
                "id": 1201,
                "name": "StructuredDocumentation",
                "src": "1152:172:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name",
                      "scope": 1250,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1202,
                        "name": "ElementaryTypeName",
                        "src": "1341:6:5"
                      }
                    ],
                    "id": 1203,
                    "name": "VariableDeclaration",
                    "src": "1341:18:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "scope": 1250,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1204,
                        "name": "ElementaryTypeName",
                        "src": "1361:6:5"
                      }
                    ],
                    "id": 1205,
                    "name": "VariableDeclaration",
                    "src": "1361:20:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "cap_",
                      "scope": 1250,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1206,
                        "name": "ElementaryTypeName",
                        "src": "1383:7:5"
                      }
                    ],
                    "id": 1207,
                    "name": "VariableDeclaration",
                    "src": "1383:12:5"
                  }
                ],
                "id": 1208,
                "name": "ParameterList",
                "src": "1340:56:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1213,
                "name": "ParameterList",
                "src": "1424:0:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1104,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 1209,
                    "name": "Identifier",
                    "src": "1404:5:5"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1203,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 1210,
                    "name": "Identifier",
                    "src": "1410:4:5"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1205,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 1211,
                    "name": "Identifier",
                    "src": "1416:6:5"
                  }
                ],
                "id": 1212,
                "name": "ModifierInvocation",
                "src": "1404:19:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e23ce9d8a2c4837c715e03678fc59b681e98d2b057b52136c3f85e02965dbcfc",
                                  "typeString": "literal_string \"ERC20MinterPauserCapped: Cap is 0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1214,
                            "name": "Identifier",
                            "src": "1434:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1207,
                                  "type": "uint256",
                                  "value": "cap_"
                                },
                                "id": 1215,
                                "name": "Identifier",
                                "src": "1442:4:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1216,
                                "name": "Literal",
                                "src": "1449:1:5"
                              }
                            ],
                            "id": 1217,
                            "name": "BinaryOperation",
                            "src": "1442:8:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "45524332304d696e7465725061757365724361707065643a204361702069732030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20MinterPauserCapped: Cap is 0\"",
                              "value": "ERC20MinterPauserCapped: Cap is 0"
                            },
                            "id": 1218,
                            "name": "Literal",
                            "src": "1452:35:5"
                          }
                        ],
                        "id": 1219,
                        "name": "FunctionCall",
                        "src": "1434:54:5"
                      }
                    ],
                    "id": 1220,
                    "name": "ExpressionStatement",
                    "src": "1434:54:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 208,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 1221,
                            "name": "Identifier",
                            "src": "1499:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25,
                              "type": "bytes32",
                              "value": "DEFAULT_ADMIN_ROLE"
                            },
                            "id": 1222,
                            "name": "Identifier",
                            "src": "1510:18:5"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 589,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 1223,
                                "name": "Identifier",
                                "src": "1530:10:5"
                              }
                            ],
                            "id": 1224,
                            "name": "FunctionCall",
                            "src": "1530:12:5"
                          }
                        ],
                        "id": 1225,
                        "name": "FunctionCall",
                        "src": "1499:44:5"
                      }
                    ],
                    "id": 1226,
                    "name": "ExpressionStatement",
                    "src": "1499:44:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 208,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 1227,
                            "name": "Identifier",
                            "src": "1553:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1190,
                              "type": "bytes32",
                              "value": "MINTER_ROLE"
                            },
                            "id": 1228,
                            "name": "Identifier",
                            "src": "1564:11:5"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 589,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 1229,
                                "name": "Identifier",
                                "src": "1577:10:5"
                              }
                            ],
                            "id": 1230,
                            "name": "FunctionCall",
                            "src": "1577:12:5"
                          }
                        ],
                        "id": 1231,
                        "name": "FunctionCall",
                        "src": "1553:37:5"
                      }
                    ],
                    "id": 1232,
                    "name": "ExpressionStatement",
                    "src": "1553:37:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 208,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 1233,
                            "name": "Identifier",
                            "src": "1600:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1195,
                              "type": "bytes32",
                              "value": "PAUSER_ROLE"
                            },
                            "id": 1234,
                            "name": "Identifier",
                            "src": "1611:11:5"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 589,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 1235,
                                "name": "Identifier",
                                "src": "1624:10:5"
                              }
                            ],
                            "id": 1236,
                            "name": "FunctionCall",
                            "src": "1624:12:5"
                          }
                        ],
                        "id": 1237,
                        "name": "FunctionCall",
                        "src": "1600:37:5"
                      }
                    ],
                    "id": 1238,
                    "name": "ExpressionStatement",
                    "src": "1600:37:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 208,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 1239,
                            "name": "Identifier",
                            "src": "1647:10:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1200,
                              "type": "bytes32",
                              "value": "CAP_ROLE"
                            },
                            "id": 1240,
                            "name": "Identifier",
                            "src": "1658:8:5"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 589,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 1241,
                                "name": "Identifier",
                                "src": "1668:10:5"
                              }
                            ],
                            "id": 1242,
                            "name": "FunctionCall",
                            "src": "1668:12:5"
                          }
                        ],
                        "id": 1243,
                        "name": "FunctionCall",
                        "src": "1647:34:5"
                      }
                    ],
                    "id": 1244,
                    "name": "ExpressionStatement",
                    "src": "1647:34:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1185,
                              "type": "uint256",
                              "value": "_cap"
                            },
                            "id": 1245,
                            "name": "Identifier",
                            "src": "1692:4:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1207,
                              "type": "uint256",
                              "value": "cap_"
                            },
                            "id": 1246,
                            "name": "Identifier",
                            "src": "1699:4:5"
                          }
                        ],
                        "id": 1247,
                        "name": "Assignment",
                        "src": "1692:11:5"
                      }
                    ],
                    "id": 1248,
                    "name": "ExpressionStatement",
                    "src": "1692:11:5"
                  }
                ],
                "id": 1249,
                "name": "Block",
                "src": "1424:286:5"
              }
            ],
            "id": 1250,
            "name": "FunctionDefinition",
            "src": "1329:381:5"
          },
          {
            "attributes": {
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1385,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Creates `amount` new tokens for `to`.\n See {ERC20-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
                },
                "id": 1251,
                "name": "StructuredDocumentation",
                "src": "1716:178:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1273,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1252,
                        "name": "ElementaryTypeName",
                        "src": "1913:7:5"
                      }
                    ],
                    "id": 1253,
                    "name": "VariableDeclaration",
                    "src": "1913:10:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 1273,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1254,
                        "name": "ElementaryTypeName",
                        "src": "1925:7:5"
                      }
                    ],
                    "id": 1255,
                    "name": "VariableDeclaration",
                    "src": "1925:14:5"
                  }
                ],
                "id": 1256,
                "name": "ParameterList",
                "src": "1912:28:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1257,
                "name": "ParameterList",
                "src": "1956:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fdd84d2c8d84034bb45d3eee143165d2e6ef4a4800be3cc40ae24fe7fa121ad3",
                                  "typeString": "literal_string \"ERC20MinterPauserCapped: must have minter role to mint\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1258,
                            "name": "Identifier",
                            "src": "1966:7:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 71,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 1259,
                                "name": "Identifier",
                                "src": "1974:7:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1190,
                                  "type": "bytes32",
                                  "value": "MINTER_ROLE"
                                },
                                "id": 1260,
                                "name": "Identifier",
                                "src": "1982:11:5"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 589,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 1261,
                                    "name": "Identifier",
                                    "src": "1995:10:5"
                                  }
                                ],
                                "id": 1262,
                                "name": "FunctionCall",
                                "src": "1995:12:5"
                              }
                            ],
                            "id": 1263,
                            "name": "FunctionCall",
                            "src": "1974:34:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "45524332304d696e7465725061757365724361707065643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20MinterPauserCapped: must have minter role to mint\"",
                              "value": "ERC20MinterPauserCapped: must have minter role to mint"
                            },
                            "id": 1264,
                            "name": "Literal",
                            "src": "2010:56:5"
                          }
                        ],
                        "id": 1265,
                        "name": "FunctionCall",
                        "src": "1966:101:5"
                      }
                    ],
                    "id": 1266,
                    "name": "ExpressionStatement",
                    "src": "1966:101:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 980,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1267,
                            "name": "Identifier",
                            "src": "2077:5:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1253,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 1268,
                            "name": "Identifier",
                            "src": "2083:2:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1255,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 1269,
                            "name": "Identifier",
                            "src": "2087:6:5"
                          }
                        ],
                        "id": 1270,
                        "name": "FunctionCall",
                        "src": "2077:17:5"
                      }
                    ],
                    "id": 1271,
                    "name": "ExpressionStatement",
                    "src": "2077:17:5"
                  }
                ],
                "id": 1272,
                "name": "Block",
                "src": "1956:145:5"
              }
            ],
            "id": 1273,
            "name": "FunctionDefinition",
            "src": "1899:202:5"
          },
          {
            "attributes": {
              "functionSelector": "8456cb59",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "pause",
              "scope": 1385,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Pauses all token transfers.\n See {ERC20Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
                },
                "id": 1274,
                "name": "StructuredDocumentation",
                "src": "2107:192:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1275,
                "name": "ParameterList",
                "src": "2318:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1276,
                "name": "ParameterList",
                "src": "2336:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e7dbcdbcb5776e213a5baf66f132b4752f810e014aaf34fe32c391723a143b67",
                                  "typeString": "literal_string \"ERC20MinterPauserCapped: must have pauser role to pause\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1277,
                            "name": "Identifier",
                            "src": "2346:7:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 71,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 1278,
                                "name": "Identifier",
                                "src": "2354:7:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1195,
                                  "type": "bytes32",
                                  "value": "PAUSER_ROLE"
                                },
                                "id": 1279,
                                "name": "Identifier",
                                "src": "2362:11:5"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 589,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 1280,
                                    "name": "Identifier",
                                    "src": "2375:10:5"
                                  }
                                ],
                                "id": 1281,
                                "name": "FunctionCall",
                                "src": "2375:12:5"
                              }
                            ],
                            "id": 1282,
                            "name": "FunctionCall",
                            "src": "2354:34:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "45524332304d696e7465725061757365724361707065643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20MinterPauserCapped: must have pauser role to pause\"",
                              "value": "ERC20MinterPauserCapped: must have pauser role to pause"
                            },
                            "id": 1283,
                            "name": "Literal",
                            "src": "2390:57:5"
                          }
                        ],
                        "id": 1284,
                        "name": "FunctionCall",
                        "src": "2346:102:5"
                      }
                    ],
                    "id": 1285,
                    "name": "ExpressionStatement",
                    "src": "2346:102:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2067,
                              "type": "function ()",
                              "value": "_pause"
                            },
                            "id": 1286,
                            "name": "Identifier",
                            "src": "2458:6:5"
                          }
                        ],
                        "id": 1287,
                        "name": "FunctionCall",
                        "src": "2458:8:5"
                      }
                    ],
                    "id": 1288,
                    "name": "ExpressionStatement",
                    "src": "2458:8:5"
                  }
                ],
                "id": 1289,
                "name": "Block",
                "src": "2336:137:5"
              }
            ],
            "id": 1290,
            "name": "FunctionDefinition",
            "src": "2304:169:5"
          },
          {
            "attributes": {
              "functionSelector": "3f4ba83a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "unpause",
              "scope": 1385,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Unpauses all token transfers.\n See {ERC20Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
                },
                "id": 1291,
                "name": "StructuredDocumentation",
                "src": "2479:196:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1292,
                "name": "ParameterList",
                "src": "2696:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1293,
                "name": "ParameterList",
                "src": "2714:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_88a361b892de9d13c3c921108ecf513ebedcc87377cefe22ea8ad6f518865385",
                                  "typeString": "literal_string \"ERC20MinterPauserCapped: must have pauser role to unpause\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1294,
                            "name": "Identifier",
                            "src": "2724:7:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 71,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 1295,
                                "name": "Identifier",
                                "src": "2732:7:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1195,
                                  "type": "bytes32",
                                  "value": "PAUSER_ROLE"
                                },
                                "id": 1296,
                                "name": "Identifier",
                                "src": "2740:11:5"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 589,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 1297,
                                    "name": "Identifier",
                                    "src": "2753:10:5"
                                  }
                                ],
                                "id": 1298,
                                "name": "FunctionCall",
                                "src": "2753:12:5"
                              }
                            ],
                            "id": 1299,
                            "name": "FunctionCall",
                            "src": "2732:34:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "45524332304d696e7465725061757365724361707065643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20MinterPauserCapped: must have pauser role to unpause\"",
                              "value": "ERC20MinterPauserCapped: must have pauser role to unpause"
                            },
                            "id": 1300,
                            "name": "Literal",
                            "src": "2768:59:5"
                          }
                        ],
                        "id": 1301,
                        "name": "FunctionCall",
                        "src": "2724:104:5"
                      }
                    ],
                    "id": 1302,
                    "name": "ExpressionStatement",
                    "src": "2724:104:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2083,
                              "type": "function ()",
                              "value": "_unpause"
                            },
                            "id": 1303,
                            "name": "Identifier",
                            "src": "2838:8:5"
                          }
                        ],
                        "id": 1304,
                        "name": "FunctionCall",
                        "src": "2838:10:5"
                      }
                    ],
                    "id": 1305,
                    "name": "ExpressionStatement",
                    "src": "2838:10:5"
                  }
                ],
                "id": 1306,
                "name": "Block",
                "src": "2714:141:5"
              }
            ],
            "id": 1307,
            "name": "FunctionDefinition",
            "src": "2680:175:5"
          },
          {
            "attributes": {
              "functionSelector": "800edb9d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "changeCap",
              "scope": 1385,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Modifies the maximum supply of the token\n Requirements:\n - the caller must have the `CAP_ROLE`."
                },
                "id": 1308,
                "name": "StructuredDocumentation",
                "src": "2861:145:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "newCap_",
                      "scope": 1335,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1309,
                        "name": "ElementaryTypeName",
                        "src": "3031:7:5"
                      }
                    ],
                    "id": 1310,
                    "name": "VariableDeclaration",
                    "src": "3031:15:5"
                  }
                ],
                "id": 1311,
                "name": "ParameterList",
                "src": "3030:17:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1312,
                "name": "ParameterList",
                "src": "3063:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_94f48719ac2fb4543ea8ace1bdafd3e4001f97345dc9e96ac64b5432666efaaa",
                                  "typeString": "literal_string \"ERC20MinterPauserCapped: must have cap role to modify maximum supply\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1313,
                            "name": "Identifier",
                            "src": "3073:7:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 71,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 1314,
                                "name": "Identifier",
                                "src": "3081:7:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1200,
                                  "type": "bytes32",
                                  "value": "CAP_ROLE"
                                },
                                "id": 1315,
                                "name": "Identifier",
                                "src": "3089:8:5"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 589,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 1316,
                                    "name": "Identifier",
                                    "src": "3099:10:5"
                                  }
                                ],
                                "id": 1317,
                                "name": "FunctionCall",
                                "src": "3099:12:5"
                              }
                            ],
                            "id": 1318,
                            "name": "FunctionCall",
                            "src": "3081:31:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "45524332304d696e7465725061757365724361707065643a206d75737420686176652063617020726f6c6520746f206d6f64696679206d6178696d756d20737570706c79",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20MinterPauserCapped: must have cap role to modify maximum supply\"",
                              "value": "ERC20MinterPauserCapped: must have cap role to modify maximum supply"
                            },
                            "id": 1319,
                            "name": "Literal",
                            "src": "3114:70:5"
                          }
                        ],
                        "id": 1320,
                        "name": "FunctionCall",
                        "src": "3073:112:5"
                      }
                    ],
                    "id": 1321,
                    "name": "ExpressionStatement",
                    "src": "3073:112:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cf3fb3cc50b010e4db782c69e22d228618be9c189ccd4ef5333e890ef6cadcaa",
                                  "typeString": "literal_string \"ERC20MinterPauserCapped: cap exceeded\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1322,
                            "name": "Identifier",
                            "src": "3266:7:5"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 690,
                                      "type": "function () view returns (uint256)",
                                      "value": "totalSupply"
                                    },
                                    "id": 1323,
                                    "name": "Identifier",
                                    "src": "3274:11:5"
                                  }
                                ],
                                "id": 1324,
                                "name": "FunctionCall",
                                "src": "3274:13:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1310,
                                  "type": "uint256",
                                  "value": "newCap_"
                                },
                                "id": 1325,
                                "name": "Identifier",
                                "src": "3291:7:5"
                              }
                            ],
                            "id": 1326,
                            "name": "BinaryOperation",
                            "src": "3274:24:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "45524332304d696e7465725061757365724361707065643a20636170206578636565646564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC20MinterPauserCapped: cap exceeded\"",
                              "value": "ERC20MinterPauserCapped: cap exceeded"
                            },
                            "id": 1327,
                            "name": "Literal",
                            "src": "3300:39:5"
                          }
                        ],
                        "id": 1328,
                        "name": "FunctionCall",
                        "src": "3266:74:5"
                      }
                    ],
                    "id": 1329,
                    "name": "ExpressionStatement",
                    "src": "3266:74:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1185,
                              "type": "uint256",
                              "value": "_cap"
                            },
                            "id": 1330,
                            "name": "Identifier",
                            "src": "3350:4:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1310,
                              "type": "uint256",
                              "value": "newCap_"
                            },
                            "id": 1331,
                            "name": "Identifier",
                            "src": "3357:7:5"
                          }
                        ],
                        "id": 1332,
                        "name": "Assignment",
                        "src": "3350:14:5"
                      }
                    ],
                    "id": 1333,
                    "name": "ExpressionStatement",
                    "src": "3350:14:5"
                  }
                ],
                "id": 1334,
                "name": "Block",
                "src": "3063:308:5"
              }
            ],
            "id": 1335,
            "name": "FunctionDefinition",
            "src": "3012:359:5"
          },
          {
            "attributes": {
              "functionSelector": "355274ea",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "cap",
              "scope": 1385,
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1336,
                "name": "ParameterList",
                "src": "3389:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1343,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1337,
                        "name": "ElementaryTypeName",
                        "src": "3421:7:5"
                      }
                    ],
                    "id": 1338,
                    "name": "VariableDeclaration",
                    "src": "3421:7:5"
                  }
                ],
                "id": 1339,
                "name": "ParameterList",
                "src": "3420:9:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1339
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1185,
                          "type": "uint256",
                          "value": "_cap"
                        },
                        "id": 1340,
                        "name": "Identifier",
                        "src": "3447:4:5"
                      }
                    ],
                    "id": 1341,
                    "name": "Return",
                    "src": "3440:11:5"
                  }
                ],
                "id": 1342,
                "name": "Block",
                "src": "3430:28:5"
              }
            ],
            "id": 1343,
            "name": "FunctionDefinition",
            "src": "3377:81:5"
          },
          {
            "attributes": {
              "baseFunctions": [
                1103,
                1421
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_beforeTokenTransfer",
              "scope": 1385,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "name": "ERC20",
                      "referencedDeclaration": 1104,
                      "type": "contract ERC20"
                    },
                    "id": 1351,
                    "name": "UserDefinedTypeName",
                    "src": "3562:5:5"
                  },
                  {
                    "attributes": {
                      "name": "ERC20Pausable",
                      "referencedDeclaration": 1422,
                      "type": "contract ERC20Pausable"
                    },
                    "id": 1352,
                    "name": "UserDefinedTypeName",
                    "src": "3569:13:5"
                  }
                ],
                "id": 1353,
                "name": "OverrideSpecifier",
                "src": "3553:30:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 1384,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1344,
                        "name": "ElementaryTypeName",
                        "src": "3494:7:5"
                      }
                    ],
                    "id": 1345,
                    "name": "VariableDeclaration",
                    "src": "3494:12:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1384,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1346,
                        "name": "ElementaryTypeName",
                        "src": "3508:7:5"
                      }
                    ],
                    "id": 1347,
                    "name": "VariableDeclaration",
                    "src": "3508:10:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 1384,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1348,
                        "name": "ElementaryTypeName",
                        "src": "3520:7:5"
                      }
                    ],
                    "id": 1349,
                    "name": "VariableDeclaration",
                    "src": "3520:14:5"
                  }
                ],
                "id": 1350,
                "name": "ParameterList",
                "src": "3493:42:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1354,
                "name": "ParameterList",
                "src": "3584:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 1421,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967271,
                                  "type": "contract super ERC20MinterPauserCapped",
                                  "value": "super"
                                },
                                "id": 1355,
                                "name": "Identifier",
                                "src": "3594:5:5"
                              }
                            ],
                            "id": 1357,
                            "name": "MemberAccess",
                            "src": "3594:26:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1345,
                              "type": "address",
                              "value": "from"
                            },
                            "id": 1358,
                            "name": "Identifier",
                            "src": "3621:4:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1347,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 1359,
                            "name": "Identifier",
                            "src": "3627:2:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1349,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 1360,
                            "name": "Identifier",
                            "src": "3631:6:5"
                          }
                        ],
                        "id": 1361,
                        "name": "FunctionCall",
                        "src": "3594:44:5"
                      }
                    ],
                    "id": 1362,
                    "name": "ExpressionStatement",
                    "src": "3594:44:5"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1345,
                              "type": "address",
                              "value": "from"
                            },
                            "id": 1363,
                            "name": "Identifier",
                            "src": "3653:4:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1364,
                                    "name": "ElementaryTypeName",
                                    "src": "3661:7:5"
                                  }
                                ],
                                "id": 1365,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3661:7:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1366,
                                "name": "Literal",
                                "src": "3669:1:5"
                              }
                            ],
                            "id": 1367,
                            "name": "FunctionCall",
                            "src": "3661:10:5"
                          }
                        ],
                        "id": 1368,
                        "name": "BinaryOperation",
                        "src": "3653:18:5"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_cf3fb3cc50b010e4db782c69e22d228618be9c189ccd4ef5333e890ef6cadcaa",
                                          "typeString": "literal_string \"ERC20MinterPauserCapped: cap exceeded\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        4294967278,
                                        4294967278
                                      ],
                                      "referencedDeclaration": 4294967278,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 1369,
                                    "name": "Identifier",
                                    "src": "3710:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "<=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "add",
                                              "referencedDeclaration": 2266,
                                              "type": "function (uint256,uint256) pure returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "arguments": [
                                                    null
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "isStructConstructorCall": false,
                                                  "lValueRequested": false,
                                                  "names": [
                                                    null
                                                  ],
                                                  "tryCall": false,
                                                  "type": "uint256",
                                                  "type_conversion": false
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": [
                                                        null
                                                      ],
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 690,
                                                      "type": "function () view returns (uint256)",
                                                      "value": "totalSupply"
                                                    },
                                                    "id": 1370,
                                                    "name": "Identifier",
                                                    "src": "3718:11:5"
                                                  }
                                                ],
                                                "id": 1371,
                                                "name": "FunctionCall",
                                                "src": "3718:13:5"
                                              }
                                            ],
                                            "id": 1372,
                                            "name": "MemberAccess",
                                            "src": "3718:17:5"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1349,
                                              "type": "uint256",
                                              "value": "amount"
                                            },
                                            "id": 1373,
                                            "name": "Identifier",
                                            "src": "3736:6:5"
                                          }
                                        ],
                                        "id": 1374,
                                        "name": "FunctionCall",
                                        "src": "3718:25:5"
                                      },
                                      {
                                        "attributes": {
                                          "arguments": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                null
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1343,
                                              "type": "function () view returns (uint256)",
                                              "value": "cap"
                                            },
                                            "id": 1375,
                                            "name": "Identifier",
                                            "src": "3747:3:5"
                                          }
                                        ],
                                        "id": 1376,
                                        "name": "FunctionCall",
                                        "src": "3747:5:5"
                                      }
                                    ],
                                    "id": 1377,
                                    "name": "BinaryOperation",
                                    "src": "3718:34:5"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "45524332304d696e7465725061757365724361707065643a20636170206578636565646564",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "string",
                                      "type": "literal_string \"ERC20MinterPauserCapped: cap exceeded\"",
                                      "value": "ERC20MinterPauserCapped: cap exceeded"
                                    },
                                    "id": 1378,
                                    "name": "Literal",
                                    "src": "3754:39:5"
                                  }
                                ],
                                "id": 1379,
                                "name": "FunctionCall",
                                "src": "3710:84:5"
                              }
                            ],
                            "id": 1380,
                            "name": "ExpressionStatement",
                            "src": "3710:84:5"
                          }
                        ],
                        "id": 1381,
                        "name": "Block",
                        "src": "3673:132:5"
                      }
                    ],
                    "id": 1382,
                    "name": "IfStatement",
                    "src": "3649:156:5"
                  }
                ],
                "id": 1383,
                "name": "Block",
                "src": "3584:227:5"
              }
            ],
            "id": 1384,
            "name": "FunctionDefinition",
            "src": "3464:347:5"
          }
        ],
        "id": 1385,
        "name": "ContractDefinition",
        "src": "795:3018:5"
      }
    ],
    "id": 1386,
    "name": "SourceUnit",
    "src": "33:3781:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x583dbB38527A0f6643796EeBD37A4eC945Dfb2Dc",
      "transactionHash": "0x069c91baa6005793bb65046244cbb0d94c089282601675b65d79888cdcd51296"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-15T11:43:10.215Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "{ERC20} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "changeCap(uint256)": {
        "details": "Modifies the maximum supply of the token Requirements: - the caller must have the `CAP_ROLE`."
      },
      "constructor": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}